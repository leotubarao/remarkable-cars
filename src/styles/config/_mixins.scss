@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $ltcoSpacers {
        .ltco-#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
        .ltco-#{$abbrev}t#{$infix}-#{$size},
        .ltco-#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-top: $length !important;
        }
        .ltco-#{$abbrev}r#{$infix}-#{$size},
        .ltco-#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-right: $length !important;
        }
        .ltco-#{$abbrev}b#{$infix}-#{$size},
        .ltco-#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-bottom: $length !important;
        }
        .ltco-#{$abbrev}l#{$infix}-#{$size},
        .ltco-#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-left: $length !important;
        }
      }
    }
  }
}

@mixin make-container-grid-layout(
  $template-columns: $grid-template-columns,
  $max-widths: $container-max-widths,
  $breakpoints: $grid-breakpoints
) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {

      $calc-container: math.div($container-max-width, $template-columns);

      grid-template-columns: 1fr repeat($template-columns, $calc-container) 1fr;
    }
  }
}
